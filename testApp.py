# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import time
from PyQt5.QtCore import QObject, QThread, pyqtSignal, QTimer, pyqtSlot
from arm_disarm import arm_disarm 
from takeoffLand import arm_takeoff as toL_arm
from takeoffLand import land as toL_land
from fly_square import arm_takeoff as fs_arm
from fly_square import movePoints as fs_move
from fly_square import land as fs_land
from land import land as ln_land
from status import battery_stats, mode_name, arm_status
from PyQt5 import QtCore, QtGui, QtWidgets
import dronekit
import threading
from connect import connection, setUAV, getUAV

class Ui_MainWindow(object):
	def setupUi(self, MainWindow):
		MainWindow.setObjectName("MainWindow")
		MainWindow.resize(500, 500)
		sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
		sizePolicy.setHorizontalStretch(0)
		sizePolicy.setVerticalStretch(0)
		sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
		MainWindow.setSizePolicy(sizePolicy)
		MainWindow.setMinimumSize(QtCore.QSize(500, 500))
		MainWindow.setMaximumSize(QtCore.QSize(500, 500))
		self.centralwidget = QtWidgets.QWidget(MainWindow)
		self.centralwidget.setMinimumSize(QtCore.QSize(500, 500))
		self.centralwidget.setMaximumSize(QtCore.QSize(500, 500))
		self.centralwidget.setObjectName("centralwidget")
		self.gridWidget = QtWidgets.QWidget(self.centralwidget)
		self.gridWidget.setGeometry(QtCore.QRect(190, 100, 300, 300))
		self.gridWidget.setObjectName("gridWidget")
		self.gridLayout = QtWidgets.QGridLayout(self.gridWidget)
		self.gridLayout.setContentsMargins(0, 0, 0, 0)
		self.gridLayout.setObjectName("gridLayout")
		self.pushButton_3 = QtWidgets.QPushButton(self.gridWidget, clicked = lambda:self.runSc3())
		self.pushButton_3.setMinimumSize(QtCore.QSize(100, 100))
		self.pushButton_3.setMaximumSize(QtCore.QSize(100, 100))
		self.pushButton_3.setObjectName("pushButton_3")
		self.gridLayout.addWidget(self.pushButton_3, 2, 0, 1, 1)
		self.pushButton_4 = QtWidgets.QPushButton(self.gridWidget, clicked = lambda:self.runSc4())
		self.pushButton_4.setMinimumSize(QtCore.QSize(100, 100))
		self.pushButton_4.setMaximumSize(QtCore.QSize(100, 100))
		self.pushButton_4.setObjectName("pushButton_4")
		self.gridLayout.addWidget(self.pushButton_4, 2, 1, 1, 1)
		self.pushButton_2 = QtWidgets.QPushButton(self.gridWidget, clicked = lambda:self.runSc2())
		self.pushButton_2.setEnabled(True)
		self.pushButton_2.setMinimumSize(QtCore.QSize(100, 100))
		self.pushButton_2.setMaximumSize(QtCore.QSize(100, 100))
		self.pushButton_2.setObjectName("pushButton_2")
		self.gridLayout.addWidget(self.pushButton_2, 0, 1, 1, 1)
		self.pushButton = QtWidgets.QPushButton(self.gridWidget, clicked = lambda:self.runSc())
		self.pushButton.setEnabled(True)
		sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
		sizePolicy.setHorizontalStretch(0)
		sizePolicy.setVerticalStretch(0)
		sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
		self.pushButton.setSizePolicy(sizePolicy)
		self.pushButton.setMinimumSize(QtCore.QSize(100, 100))
		self.pushButton.setMaximumSize(QtCore.QSize(100, 100))
		self.pushButton.setObjectName("pushButton")
		self.gridLayout.addWidget(self.pushButton, 0, 0, 1, 1)
		self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
		self.pushButton_5.setGeometry(QtCore.QRect(375, 425, 100, 50))
		self.pushButton_5.setObjectName("pushButton_5")
		self.label = QtWidgets.QLabel(self.centralwidget)
		self.label.setGeometry(QtCore.QRect(15, 250, 165, 20))
		sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
		sizePolicy.setHorizontalStretch(0)
		sizePolicy.setVerticalStretch(0)
		sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
		self.label.setSizePolicy(sizePolicy)
		self.label.setMinimumSize(QtCore.QSize(165, 20))
		self.label.setMaximumSize(QtCore.QSize(120, 20))
		self.label.setLayoutDirection(QtCore.Qt.LeftToRight)
		self.label.setAlignment(QtCore.Qt.AlignCenter)
		self.label.setObjectName("label")
		self.label_2 = QtWidgets.QLabel(self.centralwidget)
		self.label_2.setGeometry(QtCore.QRect(15, 280, 60, 20))
		sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
		sizePolicy.setHorizontalStretch(0)
		sizePolicy.setVerticalStretch(0)
		sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
		self.label_2.setSizePolicy(sizePolicy)
		self.label_2.setMinimumSize(QtCore.QSize(60, 20))
		self.label_2.setMaximumSize(QtCore.QSize(60, 20))
		self.label_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
		self.label_2.setObjectName("label_2")
		self.label_3 = QtWidgets.QLabel(self.centralwidget)
		self.label_3.setGeometry(QtCore.QRect(15, 310, 60, 20))
		sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
		sizePolicy.setHorizontalStretch(0)
		sizePolicy.setVerticalStretch(0)
		sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
		self.label_3.setSizePolicy(sizePolicy)
		self.label_3.setMinimumSize(QtCore.QSize(60, 20))
		self.label_3.setMaximumSize(QtCore.QSize(60, 20))
		self.label_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
		self.label_3.setObjectName("label_3")
		self.label_4 = QtWidgets.QLabel(self.centralwidget)
		self.label_4.setGeometry(QtCore.QRect(15, 340, 60, 20))
		sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
		sizePolicy.setHorizontalStretch(0)
		sizePolicy.setVerticalStretch(0)
		sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
		self.label_4.setSizePolicy(sizePolicy)
		self.label_4.setMinimumSize(QtCore.QSize(60, 20))
		self.label_4.setMaximumSize(QtCore.QSize(60, 20))
		self.label_4.setObjectName("label_4")
		self.label_5 = QtWidgets.QLabel(self.centralwidget)
		self.label_5.setGeometry(QtCore.QRect(80, 280, 100, 20))
		sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
		sizePolicy.setHorizontalStretch(0)
		sizePolicy.setVerticalStretch(0)
		sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
		self.label_5.setSizePolicy(sizePolicy)
		self.label_5.setMinimumSize(QtCore.QSize(100, 20))
		self.label_5.setMaximumSize(QtCore.QSize(100, 20))
		self.label_5.setLayoutDirection(QtCore.Qt.RightToLeft)
		self.label_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
		self.label_5.setObjectName("label_5")
		self.label_6 = QtWidgets.QLabel(self.centralwidget)
		self.label_6.setGeometry(QtCore.QRect(80, 310, 100, 20))
		sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
		sizePolicy.setHorizontalStretch(0)
		sizePolicy.setVerticalStretch(0)
		sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
		self.label_6.setSizePolicy(sizePolicy)
		self.label_6.setMinimumSize(QtCore.QSize(100, 20))
		self.label_6.setMaximumSize(QtCore.QSize(100, 20))
		self.label_6.setLayoutDirection(QtCore.Qt.RightToLeft)
		self.label_6.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
		self.label_6.setObjectName("label_6")
		self.label_7 = QtWidgets.QLabel(self.centralwidget)
		self.label_7.setGeometry(QtCore.QRect(80, 340, 100, 20))
		sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
		sizePolicy.setHorizontalStretch(0)
		sizePolicy.setVerticalStretch(0)
		sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
		self.label_7.setSizePolicy(sizePolicy)
		self.label_7.setMinimumSize(QtCore.QSize(100, 20))
		self.label_7.setMaximumSize(QtCore.QSize(100, 20))
		self.label_7.setLayoutDirection(QtCore.Qt.RightToLeft)
		self.label_7.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
		self.label_7.setObjectName("label_7")
		self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
		self.textEdit.setGeometry(QtCore.QRect(15, 140, 165, 30))
		sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
		sizePolicy.setHorizontalStretch(0)
		sizePolicy.setVerticalStretch(0)
		sizePolicy.setHeightForWidth(self.textEdit.sizePolicy().hasHeightForWidth())
		self.textEdit.setSizePolicy(sizePolicy)
		self.textEdit.setObjectName("textEdit")
		self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget, clicked = lambda:self.call_tryConnect())
		self.pushButton_6.setGeometry(QtCore.QRect(50, 180, 95, 25))
		sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
		sizePolicy.setHorizontalStretch(0)
		sizePolicy.setVerticalStretch(0)
		sizePolicy.setHeightForWidth(self.pushButton_6.sizePolicy().hasHeightForWidth())
		self.pushButton_6.setSizePolicy(sizePolicy)
		self.pushButton_6.setObjectName("pushButton_6")
		self.label_8 = QtWidgets.QLabel(self.centralwidget)
		self.label_8.setGeometry(QtCore.QRect(15, 110, 165, 20))
		sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
		sizePolicy.setHorizontalStretch(0)
		sizePolicy.setVerticalStretch(0)
		sizePolicy.setHeightForWidth(self.label_8.sizePolicy().hasHeightForWidth())
		self.label_8.setSizePolicy(sizePolicy)
		self.label_8.setStyleSheet("color: rgb(255, 0, 0);")
		self.label_8.setAlignment(QtCore.Qt.AlignCenter)
		self.label_8.setObjectName("label_8")
		MainWindow.setCentralWidget(self.centralwidget)
		
		self.qTimer = QTimer()
		self.qTimer.setInterval(750)
		self.qTimer.timeout.connect(self.updateStats)
		self.qTimer.start()

		self.retranslateUi(MainWindow)
		self.pushButton_5.clicked.connect(MainWindow.close)
		QtCore.QMetaObject.connectSlotsByName(MainWindow)

	def retranslateUi(self, MainWindow):
		_translate = QtCore.QCoreApplication.translate
		MainWindow.setWindowTitle(_translate("MainWindow", "Controller"))
		self.pushButton_3.setText(_translate("MainWindow", "Flight \n"
				" Around \n"
				" Square Area"))
		self.pushButton_4.setText(_translate("MainWindow", "Land"))
		self.pushButton_2.setText(_translate("MainWindow", "Takeoff \n"
				" Land"))
		self.pushButton.setText(_translate("MainWindow", "Arm \n"
				" Disarm"))
		self.pushButton_5.setText(_translate("MainWindow", "Exit"))
		self.label.setText(_translate("MainWindow", "STATUS"))
		self.label_2.setText(_translate("MainWindow", "Battery"))
		self.label_3.setText(_translate("MainWindow", "Voltage"))
		self.label_4.setText(_translate("MainWindow", "Mode"))
		self.label_5.setText(_translate("MainWindow", "NULL"))
		self.label_6.setText(_translate("MainWindow", "NULL"))
		self.label_7.setText(_translate("MainWindow", "NULL"))
		self.pushButton_6.setText(_translate("MainWindow", "Connect"))
		self.label_8.setText(_translate("MainWindow", "DISCONNECTED"))

	def call_tryConnect(self):
		th = threading.Thread(target=self.tryConnect)
		th.start()

	def stConnection(self):
		connection(self.textEdit.toPlainText())

	def tryConnect(self):
		if (self.label_8.text() == "DISCONNECTED" or self.label_8.text() == "FAILED") and \
		self.pushButton_6.text() == "Connect" and \
		len(self.textEdit.toPlainText()) != 0:
			self.label_8.setText("CONNECTING")
			self.label_8.setStyleSheet("color: rgb(0, 0, 255);")
			self.pushButton_6.setText("Disconnect")
			th = threading.Thread(target=self.stConnection)
			th.start()
			#connection(self.textEdit.toPlainText())
			counter = 0
			while(True):
				time.sleep(1)
				counter += 1
				if getUAV() != None:
					self.label_8.setText("CONNECTED")
					self.label_8.setStyleSheet("color: rgb(0, 255, 0);")
					self.pushButton_6.setText("Disconnect")
					break
				elif counter == 30:
					self.label_8.setText("FAILED")
					self.label_8.setStyleSheet("color: rgb(255, 0, 0);")
					self.pushButton_6.setText("Connect")
					break

		elif (self.label_8.text() == "CONNECTED" or self.label_8.text() == "CONNECTING") and \
		self.pushButton_6.text() == "Disconnect":
			setUAV(None)
			self.label_8.setText("DISCONNECTED")
			self.label_8.setStyleSheet("color: rgb(255, 0, 0);")
			self.pushButton_6.setText("Connect")

	def updateStats(self):
		if getUAV() != None:
			self.label_5.setText(arm_status())
			self.label_6.setText(str(battery_stats().voltage))
			self.label_7.setText(str(mode_name()))
	


if __name__ == "__main__":
	import sys
	app = QtWidgets.QApplication(sys.argv)
	MainWindow = QtWidgets.QMainWindow()
	ui = Ui_MainWindow()
	ui.setupUi(MainWindow)
	MainWindow.show()
	sys.exit(app.exec_())